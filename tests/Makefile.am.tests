GTESTER = gtester
GTESTER_REPORT = gtester-report

TEST_PROGS =

test: ${TEST_PROGS}
	@test -z "${TEST_PROGS}" || \
	${GTESTER} --verbose ${TEST_PROGS}

test-gdb: ${TEST_PROGS}
	@test -z "${TEST_PROGS}" || \
	for test_prog in ${TEST_PROGS}; do \
	    ${GTESTER} --verbose $$test_prog || { \
	      gdb .libs/lt-$$test_prog --ex "run --verbose" ; \
	      exit 1 ; \
	    } \
	done

# test-report: run tests and generate report
# perf-report: run tests with -m perf and generate report
# full-report: run tests with -m perf -m slow and generate report
test-report perf-report full-report:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || { \
	  export GTESTER_LOGDIR=`mktemp -d "$(srcdir)/.testlogs-XXXXXX"` ; \
	  if test -d "$(top_srcdir)/.git"; then \
	    export REVISION="`git describe`" ;  \
	  else \
	    export REVISION="$(VERSION)" ; \
	  fi ; \
	  export TIMESTAMP=`date +%Y-%m-%dT%H:%M:%S%z` ; \
	  case $@ in \
	  test-report) test_options="-k";; \
	  perf-report) test_options="-k -m=perf";; \
	  full-report) test_options="-k -m=perf -m=slow";; \
	  esac ; \
	  ${GTESTER} \
	    --verbose \
	    $$test_options \
	    -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` \
	    ${TEST_PROGS} ; \
	  echo '<?xml version="1.0"?>'              > $@.xml ; \
	  echo '<report-collection>'               >> $@.xml ; \
	  echo '<info>'                            >> $@.xml ; \
	  echo '  <package>$(PACKAGE)</package>'   >> $@.xml ; \
	  echo '  <version>$(VERSION)</version>'   >> $@.xml ; \
	  echo "  <revision>$$REVISION</revision>" >> $@.xml ; \
	  echo "  <date>$$TIMESTAMP</date>"        >> $@.xml ; \
	  echo '</info>'                           >> $@.xml ; \
	  for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	    sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	  done ; \
	  echo >> $@.xml ; \
	  echo '</report-collection>' >> $@.xml ; \
	  ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  rm -rf "$$GTESTER_LOGDIR" ; \
	}

.PHONY: test test-gdb test-report perf-report full-report

check-local: test


HTML_REPORTS = \
	test-report.html 	\
	perf-report.html 	\
	full-report.html

XML_REPORTS = \
	test-report.xml 	\
	perf-report.xml 	\
	full-report.xml

CLEANFILES = $(HTML_REPORTS) $(XML_REPORTS)

